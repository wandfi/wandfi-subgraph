type AssetRedeemedWithLeveragedToken @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  leveragedTokenAmount: BigInt! # uint256
  assetAmount: BigInt! # uint256
  assetTokenPrice: BigInt! # uint256
  assetTokenPriceDecimals: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AssetRedeemedWithPairs @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  usbAmount: BigInt! # uint256
  leveragedTokenAmount: BigInt! # uint256
  assetAmount: BigInt! # uint256
  assetTokenPrice: BigInt! # uint256
  assetTokenPriceDecimals: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AssetRedeemedWithUSB @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  usbAmount: BigInt! # uint256
  assetAmount: BigInt! # uint256
  assetTokenPrice: BigInt! # uint256
  assetTokenPriceDecimals: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LeveragedTokenBurned @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  leveragedTokenAmount: BigInt! # uint256
  assetTokenPrice: BigInt! # uint256
  assetTokenPriceDecimals: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LeveragedTokenMinted @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  assetTokenAmount: BigInt! # uint256
  leveragedTokenAmount: BigInt! # uint256
  assetTokenPrice: BigInt! # uint256
  assetTokenPriceDecimals: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateParamValue @entity(immutable: true) {
  id: Bytes!
  param: Bytes! # bytes32
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UsbBurned @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  usbTokenAmount: BigInt! # uint256
  usbSharesAmount: BigInt! # uint256
  assetTokenPrice: BigInt! # uint256
  assetTokenPriceDecimals: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UsbMinted @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  assetTokenAmount: BigInt! # uint256
  usbTokenAmount: BigInt! # uint256
  usbSharesAmount: BigInt! # uint256
  assetTokenPrice: BigInt! # uint256
  assetTokenPriceDecimals: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UsbToLeveragedTokens @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  usbAmount: BigInt! # uint256
  leveragedTokenAmount: BigInt! # uint256
  assetTokenPrice: BigInt! # uint256
  assetTokenPriceDecimals: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type YieldsSettlement @entity(immutable: true) {
  id: Bytes!
  usbYieldsAmount: BigInt! # uint256
  leveragedTokenYieldsAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type MatchedTokenPaid @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MatchedTokensAdded @entity(immutable: true) {
  id: Bytes!
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MatchingYieldsAdded @entity(immutable: true) {
  id: Bytes!
  yields: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MatchingYieldsPaid @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  yields: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Staked @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StakingYieldsAdded @entity(immutable: true) {
  id: Bytes!
  yields: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StakingYieldsPaid @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  yields: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdrawn @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type ETH_PtyPoolAboveAARUMatchedTokenPaid @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ETH_PtyPoolAboveAARUMatchedTokensAdded @entity(immutable: true) {
  id: Bytes!
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ETH_PtyPoolAboveAARUMatchingYieldsAdded @entity(immutable: true) {
  id: Bytes!
  yields: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ETH_PtyPoolAboveAARUMatchingYieldsPaid @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  yields: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ETH_PtyPoolAboveAARUStaked @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ETH_PtyPoolAboveAARUStakingYieldsAdded @entity(immutable: true) {
  id: Bytes!
  yields: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ETH_PtyPoolAboveAARUStakingYieldsPaid @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  yields: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ETH_PtyPoolAboveAARUWithdrawn @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
